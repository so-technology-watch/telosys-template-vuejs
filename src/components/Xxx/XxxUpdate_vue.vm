/*
 * Created on $today.date ( Time $today.time )
 * Generated by $generator.name ( version $generator.version )
 */
#set ( $uncapitalizedEntityName = ${fn.uncapitalize($entity.name)} )
##
#set ( $keyAttributes = "" )
#set ( $modalDataKeyAttributes = "" )
#foreach ( $key in $entity.keyAttributes )
#if ( $foreach.count > 1 )
#set ( $keyAttributes = $keyAttributes + "/" )
#set ( $modalDataKeyAttributes = $modalDataKeyAttributes + "," )
#end
#set ( $keyAttributes = $keyAttributes + ${uncapitalizedEntityName} + '.' + ${fn.uncapitalize($key.name)} )
#set ( $modalDataKeyAttributes = $modalDataKeyAttributes + 'modalData.' + ${fn.uncapitalize($key.name)} )
#end
##
#set ( $argsKeysDot = "" )
#foreach ( $key in $entity.keyAttributes )
#if ( $foreach.count > 1 )
#set ( $argsKeysDot = $argsKeysDot + "+'/'+modalData.${key.name}" )
#else
#set ( $argsKeysDot = $argsKeysDot + "modalData.${key.name}" )
#end
#end
##
#set ( $jsonWithKeyAttribs = "" )
#foreach ( $attrib in $entity.attributes )
#if ( $foreach.count > 1 )
#set ( $jsonWithKeyAttribs = $jsonWithKeyAttribs + "'${attrib.name}': this.${uncapitalizedEntityName}.${attrib.name}" + ",
                    		" )
#else
#set ( $jsonWithKeyAttribs = $jsonWithKeyAttribs + "'${attrib.name}': this.${uncapitalizedEntityName}.${attrib.name},
                    		" )
#end
#end
##
<template>
    <div class="container">
    <div class="container">
        <form class="form-horizontal" method="post" id="${uncapitalizedEntityName}Form" v-on:submit.prevent="save${entity.name}">
            <div class="panel-group">
                <div class="panel panel-info">
                    <div class="panel-heading">
                        <h3>
                            <span class="glyphicon glyphicon-leaf"></span>
                            Update ${entity.name}
                            <router-link to="/${uncapitalizedEntityName}/form" title="Create a new ${uncapitalizedEntityName}">
                                <button type="button" class="btn btn-default pull-right">
                                    <span class="glyphicon glyphicon-plus"></span>
                                </button>
                            </router-link>
                            <router-link to="/${uncapitalizedEntityName}" title="Back to the list">
                                <button type="button" class="btn btn-link pull-right">
                                    List
                                </button>
                            </router-link>
                        </h3>
                    </div>
                    <div class="panel-body">
                        <div v-bind:style="'display:'+status.display" class="panel-group">
                            <div v-bind:class="'panel panel-'+status.bootstrapPanelColor">
                                <div class="panel-heading">{{ status.status }}
                                    <div class="panel panel-body">{{ status.message }}
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div v-bind:style="'display:'+form.display">
#foreach ( $attrib in $entity.attributes )
                        <div class="form-group">
                            <label class="col-sm-2">${attrib.name}#if ( $attrib.isNotNull() ) *#end</label>
                            <div class="col-sm-8">
#if ( $attrib.type == "Date" )
                            	<input type="date" class="form-control"
#else
                            	<input type="text" class="form-control"
#end
                           				v-model="${uncapitalizedEntityName}.${attrib.name}" placeholder="Enter ${entity.name} ${attrib.name}" #if ( $attrib.isKeyElement() )disabled #end #if ( $attrib.isNotNull() )required #end>
                            </div>
                        </div>
#end
                        </div>
                    </div>
                    <div class="panel-footer" v-bind:style="'display:'+form.display">
                        <a @click="showModal = true; edit${entity.name}(${uncapitalizedEntityName})" title="Delete this ${uncapitalizedEntityName}">
                            <button type="button" class="btn btn-danger pull-right"><span class="glyphicon glyphicon-trash"></span> Delete
                            </button>
                        </a>
                        <modal v-if="showModal" @close="showModal = false">
                        	<div slot="footer">
                                <div slot="footer">
                                    <button type="button" class="btn btn-success pull-right" title="Delete this ${uncapitalizedEntityName}" v-on:click.prevent="showModal = false; delete${entity.name}(modalData)">Yes</button>
                                </div>
                        	</div>
                        </modal>
                        <div title="Submit changes">
                            <button type="submit" formaction="/${uncapitalizedEntityName}/update" class="btn btn-success"><span class="glyphicon glyphicon-floppy-disk"></span> Save
                            </button>
                        </div>
                        <div class="clearfix"></div>
                    </div>
                </div>
            </div>
            <script type="text/x-template" id="modal-template">
                <transition name="modal">
                    <div class="modal-mask">
                        <div class="modal-wrapper">
                            <div class="container modal-container">
                                <div class="panel-group">
                                    <div class="panel panel-info">
                                        <div class="panel-heading">
                                            <h3>Warning</h3>
                                        </div>
                                    </div>
                                </div>
                                <div class="modal-body">
                                    Are you sure you want to delete this ${uncapitalizedEntityName} ?
                                </div>
                                <div class="modal-footer">
                                    <div class="btn-toolbar">
                                        <button type="button" class="btn btn-danger pull-right"
                                                title="Cancel and close this panel" @click="${DOLLAR}emit('close')">No
                                        </button>
                                        <slot name="footer">
                                        </slot>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </transition>
            </script>
        </form>
    </div>
    </div>
</template>

<script>
    import Vue from 'vue'
    import common from '../../common.js'
    import config from '../../../config/config.js'
    import modal from '../modal'

    export default {
        name: '${entity.name}Update',
        data() {
            let id = this.${DOLLAR}route.params.id;
            let router = this.${DOLLAR}router;
			let http = this.${DOLLAR}http;
            return new Vue({
                el: '#[[#]]#${uncapitalizedEntityName}Update',
                data: {
                    ${uncapitalizedEntityName}: {},
                    modalData: {},
                    showModal: false,
                    status: {
                        status: null,
                        message: null,
                        display: "none",
                        bootstrapPanelColor: null,
                    },
                    form: {
                        display: "block"
                    }
                },
                created: function () {
                    this.fetchData();
                },
                methods: {
                    save${entity.name}: function (event) {
                        let ${uncapitalizedEntityName} = {
                            $jsonWithKeyAttribs
                        };
						http.put(config.urlApi+'/${uncapitalizedEntityName}', ${uncapitalizedEntityName}).then(response => {
                            common.apiConnect(this, response);
                            this.fetchData();
                        }, response => {
                            common.apiUnreachable(this);
                        });
                        this.status.display = "block";
                    },
                    delete${entity.name}: function (modalData) {
						{
                            http.delete(config.urlApi+'/${uncapitalizedEntityName}/'+${argsKeysDot}).then(response => {
                                common.apiConnect(this, response);
                                if (response.status === 204) {
                                    this.form.display = "none";
                                    setTimeout(function () {
                                        router.push('/${uncapitalizedEntityName}');
                                    }, 3000);
                                }
                            }, response => {
                                common.apiUnreachable(this);
                            });
                            this.status.display = "block";
                        }
                    },
                    edit${entity.name} (${uncapitalizedEntityName}) {
                        this.modalData = ${uncapitalizedEntityName};
                    },
                    fetchData: function () {
                        {
                            http.get(config.urlApi+'/${uncapitalizedEntityName}/'+id).then(response => {
                                if(response.body) {
                                    this.${uncapitalizedEntityName} = response.body;
                                }
                            }, response => {
                            common.apiUnreachable(this, response);
                                this.status.display = "block";
                            });
                        }
                    }
                }
            });
        }
    }
</script>